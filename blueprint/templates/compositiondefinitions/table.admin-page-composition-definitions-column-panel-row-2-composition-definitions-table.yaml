apiVersion: widgets.templates.krateo.io/v1beta1
kind: Table
metadata:
  name: admin-page-composition-definitions-column-panel-row-2-composition-definitions-table
  namespace: {{ .Release.Namespace }}
spec:
  apiRef:
    name: admin-page-composition-definitions-column-panel-row-2-composition-definitions-table
    namespace: {{ .Release.Namespace }}
  widgetData:
    allowedResources: []  
    prefix: admin-page-composition-definitions
    columns:
    - title: Name
      valueKey: name
    - title: Namespace
      valueKey: namespace
    - title: Status
      valueKey: status
    - title: Date
      valueKey: date
    data: []
    pageSize: 10
  widgetDataTemplate:
    - forPath: data
      expression: |
        ${
          (
            (
              if (.allCompositionDefinitions | type) == "array" then
                [.allCompositionDefinitions[]?.items[]?]
              elif (.allCompositionDefinitions | type) == "object" then
                [.allCompositionDefinitions.items[]?]
              else
                []
              end
            | map({
                key: .metadata.uid,
                name: .metadata.name,
                namespace: .metadata.namespace,
                date: .metadata.creationTimestamp,
                status: (
                  if (.status? and .status.conditions?) then
                    (.status.conditions[]? | select(.type == "Ready") | "Ready: " + .status)?
                  else
                    "Status not available"
                  end
                )
              })
            | sort_by(.date)
            | reverse
            | map([
                { valueKey: "key", kind: "jsonSchemaType", type: "string", stringValue: .key },
                { valueKey: "name", kind: "jsonSchemaType", type: "string", stringValue: .name },
                { valueKey: "namespace", kind: "jsonSchemaType", type: "string", stringValue: .namespace },
                { valueKey: "date", kind: "jsonSchemaType", type: "string", stringValue: .date },
                { valueKey: "status", kind: "jsonSchemaType", type: "string", stringValue: .status }
              ])
            )
          )
        }