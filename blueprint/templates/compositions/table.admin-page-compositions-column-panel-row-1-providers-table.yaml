apiVersion: widgets.templates.krateo.io/v1beta1
kind: Table
metadata:
  name: admin-page-compositions-column-panel-row-1-providers-table
  namespace: {{ .Release.Namespace }}
spec:
  apiRef:
    name: admin-page-compositions-column-panel-row-1-providers-table
    namespace: {{ .Release.Namespace }}
  widgetData:
    allowedResources: []  
    prefix: admin-page-providers
    columns:
    - title: Deployment Name
      valueKey: name
    - title: Namespace
      valueKey: namespace
    - title: Status
      valueKey: status
    data: []
    pageSize: 10
  widgetDataTemplate:
    - forPath: data
      expression: |
        ${
          (
            (
              if (.providers | type) == "array" then
                [.providers[]?.items[]?]
              elif (.providers | type) == "object" then
                [.providers.items[]?]
              else
                []
              end
            | map(select(
                  .metadata.labels["app.kubernetes.io/component"] == "controller" and
                  .metadata.labels["app.kubernetes.io/part-of"] == "krateoplatformops"
                ) | {
                  name: .metadata.name,
                  namespace: .metadata.namespace,
                  date: .metadata.creationTimestamp,
                  status: (
                    if (.status.conditions | type) == "array" then
                      ([.status.conditions[]? 
                        | select(.type == "Available") 
                        | "Available: " + .status] 
                      | first? // "Status not available")
                    else
                      "Status not available"
                    end
                  )
                })
            | sort_by(.date)
            | reverse
            | map([
                { valueKey: "name",      kind: "jsonSchemaType", type: "string", stringValue: .name },
                { valueKey: "namespace", kind: "jsonSchemaType", type: "string", stringValue: .namespace },
                { valueKey: "date",      kind: "jsonSchemaType", type: "string", stringValue: .date },
                { valueKey: "status",    kind: "jsonSchemaType", type: "string", stringValue: .status }
              ])
            )
          )
        }